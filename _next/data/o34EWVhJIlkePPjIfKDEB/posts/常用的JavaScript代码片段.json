{"pageProps":{"postData":{"id":"常用的JavaScript代码片段","contentHtml":"<p><img src=\"https://cdn.jsdelivr.net/gh/shimiyzhang/blog-image/images/23-02-24/clipboard-7869.e7dab8.webp\" alt=\"\"></p>\n<p>列举一下前端开发中常用的JavaScript代码片段，方便今后复习查阅。</p>\n<p><strong>1. 三元表达式</strong></p>\n<p>但是，不要过度使用它。它会使你的代码更加冗长。明智的做法是仅用此替换简单的表达式以提高可读性并减少代码行数。</p>\n<pre><code>const age = 12;\nlet ageGroup;\n\n// LONG FORM\nif (age > 18) {\n  ageGroup = 'An adult';\n} else {\n  ageGroup = 'A child';\n}\n\n// SHORTHAND\nageGroup = age > 18 ? 'An adult' : 'A child';\n</code></pre>\n<p><strong>2. 空值合并</strong></p>\n<p>空值合并运算符（??）是一个逻辑运算符，当左侧的操作数为 null 或者 undefined 时，返回其右侧操作数，否则返回左侧操作数。</p>\n<pre><code>let something;\n\n// LONG FORM\nif (something) {\n  console.log(something);\n} else {\n  console.log('Nothing found');\n}\n\n// SHORTHAND\nconsole.log(something ?? 'Nothing found');\n</code></pre>\n<p><strong>3.数组去重</strong></p>\n<pre><code>const uniqueArray = (array) => [...new Set(array)];\nuniqueArray([1,1,2,2,3,3]); // [1,2,3]\n</code></pre>\n<p><strong>4. 将任何值转换为布尔值</strong></p>\n<pre><code>!!true    // true\n!!2       // true\n!![]      // ture\n!!\"Test\"  // true\n\n!!false   // false\n!!0       // false\n!!''      // false\n</code></pre>\n<p><strong>5. 扩展运算符</strong></p>\n<pre><code>// 组合数组\nconst nums1 = [1, 2, 3];\nconst nums2 = [4, 5, 6];\n// LONG FORM\nlet newArray = nums1.concat(nums2);\n// SHORTHAND\nnewArray = [...nums1, ...nums2];\n\n// 推送数组\nlet numbers = [1, 2, 3];\n// LONG FORM\nnumbers.push(4);\n// SHORTHAND\nnumbers = [...numbers, 4, 5];\n</code></pre>\n<p><strong>6. 返回当前访问的URL地址</strong></p>\n<pre><code>const currentURL = () => window.location.href;\ncurrentURL(); // 'https://www.baidu.com/'\n</code></pre>\n<p><strong>7. 生成随机数</strong></p>\n<pre><code>const random = (min, max) => Math.floor(Math.random() * (max - min)) + min;\n\nrandom(10, 14); // [10, 11, 12, 13]\n</code></pre>\n<p>此随机函数包括下限，但不包括上限。</p>\n<p><strong>8. 生成指定范围的number数组</strong></p>\n<pre><code>const range = (start, end, step = 1) => {\n  let output = [];\n\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n\n  for (let i = start; i &#x3C; end; i += step) {\n    output.push(i);\n  }\n  return output;\n}\n\nrange(5); // [0, 1, 2, 3, 4]\n\nrange(5, 10); // [5, 6, 7, 8, 9]\n\nrange(0, 6, 2); // [0, 2, 4]\n</code></pre>\n<p><strong>9. 函数防抖</strong></p>\n<pre><code>const debounce = (callback, wait) => {\n  let timeoutId = null;\n\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n\n    timeoutId = window.setTimeout(() => {\n      callback.apply(null. args);\n    }, wait);\n  };\n}\n</code></pre>\n<pre><code>// 示例\nconst handleMouseMove = debouce((ev) => {\n  // Do stuff with the event!\n}, 250);\n\nwindow.addEventListener('mousemove', handleMouseMove);\n</code></pre>\n<p>在此示例中，在用户开始移动鼠标，然后停止移动鼠标至少 250 毫秒之前，不会发生任何操作。</p>\n<p><strong>10. 函数节流</strong></p>\n<pre><code>const throttle = (callback, wait) => {\n  let timeoutId = null;\n\n  return (...arg) => {\n    if (!timeoutId) {\n      timeoutId = setTimeout(() => {\n        timeoutId = null;\n        callback.apply(null, arg);\n      })\n    }\n  }\n}\n</code></pre>\n<pre><code>// 示例\nconst handleOnScroll = throttle((ev) => {\n  // Do stuff with the event!\n}, 250);\n\nwindow.addEventListener('onScroll', handleOnScroll);\n</code></pre>\n<p>在此示例中，在用户开始滚动滑轮，然后间隔250 毫秒执行一次操作。</p>\n<p>以上就是本文的全部内容，感谢阅读。</p>\n","title":"常用的JavaScript代码片段","date":"2023-02-24"}},"__N_SSG":true}